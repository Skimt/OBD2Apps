// <auto-generated />
using System;
using Management.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Management.Migrations
{
    [DbContext(typeof(OBDContext))]
    partial class OBDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Management.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CarModelId")
                        .HasColumnType("int");

                    b.Property<byte?>("Fuel")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Year")
                        .HasColumnType("date");

                    b.HasKey("CarId");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("PersonId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Management.Models.CarBrand", b =>
                {
                    b.Property<int>("CarBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.HasKey("CarBrandId");

                    b.ToTable("CarBrand");
                });

            modelBuilder.Entity("Management.Models.CarModel", b =>
                {
                    b.Property<int>("CarModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.HasKey("CarModelId");

                    b.ToTable("CarModel");
                });

            modelBuilder.Entity("Management.Models.LogEntry", b =>
                {
                    b.Property<int>("LogEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Pid")
                        .HasColumnName("PID")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<float?>("Value")
                        .HasColumnType("real");

                    b.HasKey("LogEntryId");

                    b.HasIndex("SessionId");

                    b.ToTable("LogEntry");
                });

            modelBuilder.Entity("Management.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GivenName")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<Guid?>("IdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SurName")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Management.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateStop")
                        .HasColumnType("datetime");

                    b.HasKey("SessionId");

                    b.HasIndex("CarId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("Management.Models.Car", b =>
                {
                    b.HasOne("Management.Models.CarBrand", "Brand")
                        .WithMany("Cars")
                        .HasForeignKey("CarBrandId")
                        .HasConstraintName("FK__Car__BrandId__797309D9");

                    b.HasOne("Management.Models.CarModel", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("CarModelId")
                        .HasConstraintName("FK__Car__ModelId__7B5B524B");

                    b.HasOne("Management.Models.Person", "Person")
                        .WithMany("Cars")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK__Car__PersonId__3C69FB99");
                });

            modelBuilder.Entity("Management.Models.LogEntry", b =>
                {
                    b.HasOne("Management.Models.Session", "Session")
                        .WithMany("LogEntries")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK_LogEntry_SessionId");
                });

            modelBuilder.Entity("Management.Models.Session", b =>
                {
                    b.HasOne("Management.Models.Car", "Car")
                        .WithMany("Sessions")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__Session_CarId_60A75C0F")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
